{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom'; // Import useHistory\n\nimport { supabase } from '../client';\nimport './DetailView.css';\n\nconst DetailView = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [detail, setDetail] = useState(null);\n  const [likeCount, setLikeCount] = useState(0); // State for like count\n\n  const [comments, setComments] = useState([]); // State for comments\n\n  const [newComment, setNewComment] = useState(''); // State for new comment input\n\n  const history = useHistory(); // Use useHistory hook\n  // Function to fetch comments\n\n  const fetchComments = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('Comments').select('*').eq('postid', id);\n\n    if (error) {\n      console.error('Error fetching comments:', error);\n    } else {\n      setComments(data);\n    }\n  };\n\n  useEffect(() => {\n    const fetchDetail = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from('Manure Posts').select('*').eq('id', id).single();\n\n      if (error) {\n        console.error('Error fetching details:', error);\n      } else {\n        setDetail(data);\n        setLikeCount(data.likes); // Set initial like count from fetched data\n      }\n    }; // Fetch comments when component mounts\n\n\n    fetchComments();\n    fetchDetail();\n  }, [id]); // Rest of the code...\n};\n\n_s(DetailView, \"0z8Nw5+v4MmiH8RFn4RJRbaddJA=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = DetailView;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailView\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useHistory","supabase","DetailView","id","detail","setDetail","likeCount","setLikeCount","comments","setComments","newComment","setNewComment","history","fetchComments","data","error","from","select","eq","console","fetchDetail","single","likes"],"sources":["C:/Users/aaron/OneDrive/Desktop/Cabinent/Content/Code/Github/CAP Full Stack/Final Project/client/src/components/DetailView.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom'; // Import useHistory\r\nimport { supabase } from '../client';\r\nimport './DetailView.css'; \r\n\r\nconst DetailView = () => {\r\n    const { id } = useParams();\r\n    const [detail, setDetail] = useState(null);\r\n    const [likeCount, setLikeCount] = useState(0); // State for like count\r\n    const [comments, setComments] = useState([]); // State for comments\r\n    const [newComment, setNewComment] = useState(''); // State for new comment input\r\n    const history = useHistory(); // Use useHistory hook\r\n\r\n    // Function to fetch comments\r\n    const fetchComments = async () => {\r\n        const { data, error } = await supabase\r\n            .from('Comments')\r\n            .select('*')\r\n            .eq('postid', id);\r\n\r\n        if (error) {\r\n            console.error('Error fetching comments:', error);\r\n        } else {\r\n            setComments(data);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchDetail = async () => {\r\n            const { data, error } = await supabase\r\n                .from('Manure Posts')\r\n                .select('*')\r\n                .eq('id', id)\r\n                .single();\r\n\r\n            if (error) {\r\n                console.error('Error fetching details:', error);\r\n            } else {\r\n                setDetail(data);\r\n                setLikeCount(data.likes); // Set initial like count from fetched data\r\n            }\r\n        };\r\n\r\n        // Fetch comments when component mounts\r\n        fetchComments();\r\n        fetchDetail();\r\n    }, [id]);\r\n\r\n    // Rest of the code...\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC,C,CAA0D;;AAC1D,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAO,kBAAP;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACrB,MAAM;IAAEC;EAAF,IAASJ,SAAS,EAAxB;EACA,MAAM,CAACK,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,IAAD,CAApC;EACA,MAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,CAAD,CAA1C,CAHqB,CAG0B;;EAC/C,MAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC,CAJqB,CAIyB;;EAC9C,MAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C,CALqB,CAK6B;;EAClD,MAAMc,OAAO,GAAGZ,UAAU,EAA1B,CANqB,CAMS;EAE9B;;EACA,MAAMa,aAAa,GAAG,YAAY;IAC9B,MAAM;MAAEC,IAAF;MAAQC;IAAR,IAAkB,MAAMd,QAAQ,CACjCe,IADyB,CACpB,UADoB,EAEzBC,MAFyB,CAElB,GAFkB,EAGzBC,EAHyB,CAGtB,QAHsB,EAGZf,EAHY,CAA9B;;IAKA,IAAIY,KAAJ,EAAW;MACPI,OAAO,CAACJ,KAAR,CAAc,0BAAd,EAA0CA,KAA1C;IACH,CAFD,MAEO;MACHN,WAAW,CAACK,IAAD,CAAX;IACH;EACJ,CAXD;;EAaAjB,SAAS,CAAC,MAAM;IACZ,MAAMuB,WAAW,GAAG,YAAY;MAC5B,MAAM;QAAEN,IAAF;QAAQC;MAAR,IAAkB,MAAMd,QAAQ,CACjCe,IADyB,CACpB,cADoB,EAEzBC,MAFyB,CAElB,GAFkB,EAGzBC,EAHyB,CAGtB,IAHsB,EAGhBf,EAHgB,EAIzBkB,MAJyB,EAA9B;;MAMA,IAAIN,KAAJ,EAAW;QACPI,OAAO,CAACJ,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;MACH,CAFD,MAEO;QACHV,SAAS,CAACS,IAAD,CAAT;QACAP,YAAY,CAACO,IAAI,CAACQ,KAAN,CAAZ,CAFG,CAEuB;MAC7B;IACJ,CAbD,CADY,CAgBZ;;;IACAT,aAAa;IACbO,WAAW;EACd,CAnBQ,EAmBN,CAACjB,EAAD,CAnBM,CAAT,CAtBqB,CA2CrB;AACH,CA5CD;;GAAMD,U;UACaH,S,EAKCC,U;;;KANdE,U"},"metadata":{},"sourceType":"module"}