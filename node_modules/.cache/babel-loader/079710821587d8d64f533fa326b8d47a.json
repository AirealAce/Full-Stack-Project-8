{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aaron\\\\OneDrive\\\\Desktop\\\\Cabinent\\\\Content\\\\Code\\\\Github\\\\CAP Full Stack\\\\Final Project\\\\client\\\\src\\\\components\\\\DetailView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { supabase } from '../client';\nimport './DetailView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DetailView = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [detail, setDetail] = useState(null);\n  const [likeCount, setLikeCount] = useState(0); // State for like count\n\n  const [comments, setComments] = useState([]); // State for comments\n\n  const [newComment, setNewComment] = useState(''); // State for new comment input\n  // Function to fetch comments\n\n  const fetchComments = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('Comments').select('*').eq('postid', id);\n\n    if (error) {\n      console.error('Error fetching comments:', error);\n    } else {\n      setComments(data);\n    }\n  };\n\n  useEffect(() => {\n    const fetchDetail = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from('Manure Posts').select('*').eq('id', id).single();\n\n      if (error) {\n        console.error('Error fetching details:', error);\n      } else {\n        setDetail(data);\n        setLikeCount(data.likes); // Set initial like count from fetched data\n      }\n    }; // Fetch comments when component mounts\n\n\n    fetchComments();\n    fetchDetail();\n  }, [id]); // Function to handle like button click\n\n  const handleLikeClick = async () => {\n    const newLikeCount = likeCount + 1; // Increment like count\n\n    setLikeCount(newLikeCount); // Update like count in state\n    // Update like count in the database (optional)\n\n    await supabase.from('Manure Posts').update({\n      likes: newLikeCount\n    }).eq('id', id);\n  }; // Function to handle new comment submission\n\n\n  const handleSubmitComment = async e => {\n    e.preventDefault();\n    if (!newComment.trim()) return; // Upload new comment to the database\n\n    await supabase.from('Comments').insert([{\n      postid: id,\n      content: newComment\n    }]); // Reset new comment input\n\n    setNewComment(''); // Refetch comments to update the UI\n\n    fetchComments();\n  }; // Function to handle edit button click\n\n\n  const handleEditClick = () => {\n    // Redirect to edit post page\n    // You need to replace '/editpost/' with the actual URL of the edit post page\n    window.location.href = `/edit/${id}`;\n  }; // Function to handle delete button click\n\n\n  const handleDeleteClick = async () => {\n    // Delete post from the database\n    await supabase.from('Manure Posts').delete().eq('id', id); // Redirect to home page or any other page after deletion\n    // You need to replace '/' with the actual URL of the desired page\n\n    window.location.href = '/';\n  };\n\n  if (!detail) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DetailView Loading\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DetailView\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"editButton\",\n      onClick: handleEditClick,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"deleteButton\",\n      onClick: handleDeleteClick,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: detail.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: detail.type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: detail.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"likeButton\",\n      onClick: handleLikeClick,\n      children: [\"\\uD83D\\uDEBD \", likeCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: comment.content\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitComment,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newComment,\n          onChange: e => setNewComment(e.target.value),\n          placeholder: \"Add a comment...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Post Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DetailView, \"rYNFt1xo3AYdnJ4Mvmf9GCfOdts=\", false, function () {\n  return [useParams];\n});\n\n_c = DetailView;\nexport default DetailView;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailView\");","map":{"version":3,"names":["React","useEffect","useState","useParams","supabase","DetailView","id","detail","setDetail","likeCount","setLikeCount","comments","setComments","newComment","setNewComment","fetchComments","data","error","from","select","eq","console","fetchDetail","single","likes","handleLikeClick","newLikeCount","update","handleSubmitComment","e","preventDefault","trim","insert","postid","content","handleEditClick","window","location","href","handleDeleteClick","delete","name","type","description","map","comment","target","value"],"sources":["C:/Users/aaron/OneDrive/Desktop/Cabinent/Content/Code/Github/CAP Full Stack/Final Project/client/src/components/DetailView.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { supabase } from '../client';\r\nimport './DetailView.css'; \r\n\r\nconst DetailView = () => {\r\n    const { id } = useParams();\r\n    const [detail, setDetail] = useState(null);\r\n    const [likeCount, setLikeCount] = useState(0); // State for like count\r\n    const [comments, setComments] = useState([]); // State for comments\r\n    const [newComment, setNewComment] = useState(''); // State for new comment input\r\n\r\n    // Function to fetch comments\r\n    const fetchComments = async () => {\r\n        const { data, error } = await supabase\r\n            .from('Comments')\r\n            .select('*')\r\n            .eq('postid', id);\r\n\r\n        if (error) {\r\n            console.error('Error fetching comments:', error);\r\n        } else {\r\n            setComments(data);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchDetail = async () => {\r\n            const { data, error } = await supabase\r\n                .from('Manure Posts')\r\n                .select('*')\r\n                .eq('id', id)\r\n                .single();\r\n\r\n            if (error) {\r\n                console.error('Error fetching details:', error);\r\n            } else {\r\n                setDetail(data);\r\n                setLikeCount(data.likes); // Set initial like count from fetched data\r\n            }\r\n        };\r\n\r\n        // Fetch comments when component mounts\r\n        fetchComments();\r\n        fetchDetail();\r\n    }, [id]);\r\n\r\n    // Function to handle like button click\r\n    const handleLikeClick = async () => {\r\n        const newLikeCount = likeCount + 1; // Increment like count\r\n        setLikeCount(newLikeCount); // Update like count in state\r\n\r\n        // Update like count in the database (optional)\r\n        await supabase\r\n            .from('Manure Posts')\r\n            .update({ likes: newLikeCount })\r\n            .eq('id', id);\r\n    };\r\n\r\n    // Function to handle new comment submission\r\n    const handleSubmitComment = async (e) => {\r\n        e.preventDefault();\r\n        if (!newComment.trim()) return;\r\n\r\n        // Upload new comment to the database\r\n        await supabase\r\n            .from('Comments')\r\n            .insert([{ postid: id, content: newComment }]);\r\n\r\n        // Reset new comment input\r\n        setNewComment('');\r\n        \r\n        // Refetch comments to update the UI\r\n        fetchComments();\r\n    };\r\n\r\n    // Function to handle edit button click\r\n    const handleEditClick = () => {\r\n        // Redirect to edit post page\r\n        // You need to replace '/editpost/' with the actual URL of the edit post page\r\n        window.location.href = `/edit/${id}`;\r\n    };\r\n\r\n    // Function to handle delete button click\r\n    const handleDeleteClick = async () => {\r\n        // Delete post from the database\r\n        await supabase\r\n            .from('Manure Posts')\r\n            .delete()\r\n            .eq('id', id);\r\n        \r\n        // Redirect to home page or any other page after deletion\r\n        // You need to replace '/' with the actual URL of the desired page\r\n        window.location.href = '/';\r\n    };\r\n\r\n    if (!detail) return <div className=\"DetailView Loading\">Loading...</div>;\r\n\r\n    return (\r\n        <div className=\"DetailView\">\r\n            <button className=\"editButton\" onClick={handleEditClick}>Edit</button>\r\n            <button className=\"deleteButton\" onClick={handleDeleteClick}>Delete</button>\r\n            <h1>{detail.name}</h1>\r\n            <h2>{detail.type}</h2>\r\n            <p>{detail.description}</p>\r\n            <button className=\"likeButton\" onClick={handleLikeClick}>\r\n                🚽 {likeCount}\r\n            </button>\r\n            <div>\r\n                <h3>Comments</h3>\r\n                <ul>\r\n                    {comments.map(comment => (\r\n                        <li key={comment.id}>{comment.content}</li>\r\n                    ))}\r\n                </ul>\r\n                <form onSubmit={handleSubmitComment}>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={newComment}\r\n                        onChange={e => setNewComment(e.target.value)}\r\n                        placeholder=\"Add a comment...\"\r\n                    />\r\n                    <button type=\"submit\">Post Comment</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailView;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}